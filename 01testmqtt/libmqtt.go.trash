package main

import (
	"fmt"

	"github.com/goiiot/libmqtt"
)

func publish() {
	client, err := libmqtt.NewClient(
		// server address(es)
		libmqtt.WithServer("172.16.2.3:1883"),
	)
	if err != nil {
		// handle client creation error
		fmt.Println("Error to connect")
	}
	client.Connect(func(server string, code libmqtt.ConnAckCode, err error) {
		if err != nil {
			// failed
			panic(err)
		}

		if code != libmqtt.ConnAccepted {
			// server rejected or in error
			panic(code)
		}

		// success
		// you are now connected to the `server`
		// (the `server` is one of your provided `servers` when create the client)
		// start your business logic here or send a signal to your logic to start

		// subscribe some topic(s)
		client.Subscribe(
			&libmqtt.Topic{Name: "foo"},
			&libmqtt.Topic{Name: "bar", Qos: libmqtt.Qos1},
			// ...
		)

		// publish some topic message(s)
		client.Publish(
			&libmqtt.PublishPacket{
				TopicName: "foo",
				Qos:       libmqtt.Qos0,
				Payload:   []byte("foo data"),
			},
			&libmqtt.PublishPacket{
				TopicName: "bar",
				Qos:       libmqtt.Qos1,
				Payload:   []byte("bar data"),
			},
			// ...
		)
	})
}
